name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        dependency-version: ['lowest', 'highest']
        
    name: PHP ${{ matrix.php-version }} - ${{ matrix.dependency-version }} deps
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, curl, json
          coverage: xdebug
          tools: composer:v2
          
      - name: Validate composer.json
        run: composer validate --strict
        
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.dependency-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.dependency-version }}-
            ${{ runner.os }}-composer-
            
      - name: Install dependencies
        run: |
          if [ "${{ matrix.dependency-version }}" = "lowest" ]; then
            composer update --prefer-lowest --prefer-stable --no-interaction --no-progress
          else
            composer update --no-interaction --no-progress
          fi
          
      - name: Run PHPStan
        run: composer phpstan
        
      - name: Check coding standards
        run: composer cs
        
      - name: PHP syntax check
        run: find src/ -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l
        
      - name: Run tests
        run: composer test
        if: matrix.php-version != '8.1' || matrix.dependency-version != 'highest'
        
      - name: Run tests with coverage
        run: vendor/bin/phpunit tests --coverage-clover=coverage/clover.xml
        if: matrix.php-version == '8.1' && matrix.dependency-version == 'highest'
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.php-version == '8.1' && matrix.dependency-version == 'highest'
        with:
          file: ./coverage/clover.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false